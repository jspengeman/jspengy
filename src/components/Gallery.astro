---
import { Picture } from "astro:assets";
import { getAllImages } from "../utils/gallery";
import "photoswipe/style.css";

const images = await getAllImages();
const THUMBNAIL_QUALITY = 10;
---

<div class="my-2 mb-8" transition:animate="fade">
    <div
        id="photo-gallery"
        class="grid sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-3 gap-x-4"
    >
        {
            images.map((image) => (
                <div>
                    <a
                        href={`/gallery/${image.fileName}`}
                        data-astro-prefetch="hover"
                        data-pswp-width={image.attributes.width}
                        data-pswp-height={image.attributes.height}
                        data-quality={THUMBNAIL_QUALITY}
                    >
                        <Picture
                            src={image.src}
                            alt="Sorry, I will work on getting alt text implemented. One step at a time."
                            class="mb-4 h-auto max-w-full rounded-sm"
                            decoding="sync"
                            loading={image.attributes.loading}
                            inferSize={true}
                            quality={THUMBNAIL_QUALITY}
                            style={image.attributes.style}
                        />
                    </a>
                </div>
            ))
        }
    </div>
</div>

<script>
    import PhotoSwipeLightbox from "photoswipe/lightbox";
    const gallery = document.getElementById("photo-gallery");
    const shouldRegister = () => gallery !== undefined;

    const configureSourceSets = (gallery: HTMLElement | null) => {
        const anchors = gallery?.getElementsByTagName("a") || [];
        for (let i = 0; i < anchors.length; i++) {
            const anchor = anchors[i];
            const quality = anchor.dataset.quality;
            const sources = anchor.getElementsByTagName("source");
            if (sources !== null && sources.length > 0) {
                // We can just KISS and take the first one for now. Although, if the implementation of Image changes this could change.
                const source = sources[0];

                // Tiny hack here. Lets just hope that &q= isn't somewhere else in this string.
                const highQualitySourceSet = source.srcset.replaceAll(
                    `&q=${quality}`,
                    "&q=50"
                );
                anchor.setAttribute("data-pswp-srcset", highQualitySourceSet);
            }
        }
    };

    const registerScript = () => {
        const lightbox = new PhotoSwipeLightbox({
            gallery: "#photo-gallery",
            children: "a",
            pswpModule: () => import("photoswipe"),
        });

        // Note: we do this because if you just set the src on the anchor tag photoswipe will do two things we don't want
        // It will hit ImageKit directly and it will not use reponsive images provided by the source set. This fixes that.
        configureSourceSets(gallery);

        lightbox.init();

        lightbox.on("contentActivate", ({ content }) => {
            const element = content.data.element as
                | HTMLAnchorElement
                | undefined;
            window.history.replaceState(null, "", element?.href);
        });

        lightbox.on("close", () => {
            window.history.replaceState(null, "", "/");
        });
    };

    if (shouldRegister()) {
        registerScript();

        // Note: We run this JS on every page load. View transistions cause the JS to not load normally.
        // Github Issue: https://github.com/withastro/astro/issues/7765#issuecomment-2155408334
        document.addEventListener("astro:after-swap", registerScript);
    }
</script>
